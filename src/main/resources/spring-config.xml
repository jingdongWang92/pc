<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
                http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                http://www.springframework.org/schema/context 
                http://www.springframework.org/schema/context/spring-context-4.0.xsd
                http://www.springframework.org/schema/tx 
                http://www.springframework.org/schema/tx/spring-tx-4.0.xsd 
                http://www.springframework.org/schema/jee 
                http://www.springframework.org/schema/jee/spring-jee-4.0.xsd 
                http://www.springframework.org/schema/aop 
                http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

	<!-- 自动扫描业务包 -->
	<context:component-scan base-package="com.jcble.jcparking.common.service" />

	<!-- 配置数据源，使用的是alibaba的Druid(德鲁伊)数据源 -->
	<bean name="jndiDataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="0" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="20" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />
		
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000" />
		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />
		<!-- 监控数据库 -->
		<!-- <property name="filters" value="stat" /> -->
		<property name="filters" value="mergeStat" />
	</bean>

	<!-- 配置事务 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="jndiDataSource" />
	</bean>
	<!-- 配置基于注解的事物aop -->
	<tx:annotation-driven transaction-manager="txManager" proxy-target-class="true"/>

	<!-- 集成mybatis -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="jndiDataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<!-- 自动配置别名 -->
		<property name="typeAliasesPackage" value="com.jcble.jcparking.common.model" />
	</bean>
	
     <!--通过模板定制mybatis的行为 -->
	 <bean id="sqlSessionTemplateSimple" class="org.mybatis.spring.SqlSessionTemplate">   
	    <constructor-arg index="0" ref="sqlSessionFactory" />
	    <!--更新采用单个模式 -->
	    <constructor-arg index="1" value="SIMPLE"/>
     </bean>
     
     <!--通过模板定制mybatis的行为 -->
	 <bean id="sqlSessionTemplateBatch" class="org.mybatis.spring.SqlSessionTemplate">   
	    <constructor-arg index="0" ref="sqlSessionFactory" />
	    <!--更新采用批量模式 -->
	    <constructor-arg index="1" value="BATCH"/>
     </bean>
     
	<!-- 采用自动扫描方式创建mapper bean(单个更新模式) -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.jcble.jcparking.common.dao" />
		<property name="sqlSessionTemplateBeanName" value="sqlSessionTemplateSimple" />
		<property name="markerInterface" value="com.jcble.jcparking.common.dao.BaseSimpleDao" />
	</bean>
     
	<!-- 采用自动扫描方式创建mapper bean(批量更新模式) -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.jcble.jcparking.common.dao" />
		<property name="sqlSessionTemplateBeanName" value="sqlSessionTemplateBatch" />
		<property name="markerInterface" value="com.jcble.jcparking.common.dao.BaseBatchDao" />
	</bean>
</beans>
